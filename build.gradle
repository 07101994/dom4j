apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'org.dom4j'
archivesBaseName = 'dom4j'
version = '2.0.0-RC1'

sourceCompatibility = 1.5

compileJava {
	options.encoding = 'UTF-8'
};

repositories {
	mavenCentral()
}

dependencies {

	compile(
					'jaxen:jaxen:1.1.6',

					'javax.xml.stream:stax-api:1.0-2',
					'net.java.dev.msv:xsdlib:2013.6.1',
					'xpp3:xpp3:1.1.4c',
					'pull-parser:pull-parser:2',
					'javax.xml.bind:jaxb-api:2.2.12',
	)

	testCompile(
					'org.testng:testng:6.8.21',

					'xerces:xercesImpl:2.11.0',
					'xalan:xalan:2.7.2',
	)
}

javadoc {
	options.encoding = 'UTF-8'
	options.charSet = options.encoding
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

signing {
	sign configurations.archives
}

test {
	useTestNG()
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'dom4j'
				packaging 'jar'
				description 'flexible XML framework for Java'
				url 'http://dom4j.github.io/'
				licenses {
					license {
						name 'BSD 3-clause New License'
						url 'https://github.com/dom4j/dom4j/blob/master/LICENSE'
					}
				}
				developers {
					developer {
						name 'Filip Jirs√°k'
						email 'filip@jirsak.org'
						url 'https://github.com/FilipJirsak'
					}
				}
				scm {
					connection 'scm:git:git@github.com:dom4j/dom4j.git'
					developerConnection 'scm:git:git@github.com:dom4j/dom4j.git'
					url 'git@github.com:dom4j/dom4j.git'
				}
			}
		}
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.5'
}